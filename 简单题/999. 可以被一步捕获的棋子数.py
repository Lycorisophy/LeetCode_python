def numRookCaptures(board: [[str]]) -> int:
    cnt = 0
    for i, D in enumerate(board):
        for j, d in enumerate(D):
            if d == 'R':
                x, y = i, j
                break
    for j in range(y-1, -1, -1):
        d = board[x][j]
        if d == 'B':
            break
        if d == 'p':
            cnt += 1
            break
    for j in range(y + 1, 8):
        d = board[x][j]
        if d == 'B':
            break
        if d == 'p':
            cnt += 1
            break
    for i in range(x-1, -1, -1):
        d = board[i][y]
        if d == 'B':
            break
        if d == 'p':
            cnt += 1
            break
    for i in range(x+1, 8):
        d = board[i][y]
        if d == 'B':
            break
        if d == 'p':
            cnt += 1
            break
    return cnt


if __name__ == '__main__':
    # print(numRookCaptures([[".", ".", ".", ".", ".", ".", ".", "."], [".", ".", ".", "p", ".", ".", ".", "."],
    #                        [".", ".", ".", "R", ".", ".", ".", "p"], [".", ".", ".", ".", ".", ".", ".", "."],
    #                        [".", ".", ".", ".", ".", ".", ".", "."], [".", ".", ".", "p", ".", ".", ".", "."],
    #                        [".", ".", ".", ".", ".", ".", ".", "."], [".", ".", ".", ".", ".", ".", ".", "."]]))
    print(numRookCaptures([[".", ".", ".", ".", ".", ".", ".", "."], [".", "p", "p", "p", "p", "p", ".", "."],
                           [".", "p", "p", "B", "p", "p", ".", "."], [".", "p", "B", "R", "B", "p", ".", "."],
                           [".", "p", "p", "B", "p", "p", ".", "."], [".", "p", "p", "p", "p", "p", ".", "."],
                           [".", ".", ".", ".", ".", ".", ".", "."], [".", ".", ".", ".", ".", ".", ".", "."]]))
    print(numRookCaptures([[".", ".", ".", ".", ".", ".", ".", "."], [".", ".", ".", "p", ".", ".", ".", "."],
                           [".", ".", ".", "p", ".", ".", ".", "."], ["p", "p", ".", "R", ".", "p", "B", "."],
                           [".", ".", ".", ".", ".", ".", ".", "."], [".", ".", ".", "B", ".", ".", ".", "."],
                           [".", ".", ".", "p", ".", ".", ".", "."], [".", ".", ".", ".", ".", ".", ".", "."]]))
